<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xy.ecommerce.dao.CartMapper">
  <resultMap id="BaseResultMap" type="com.xy.ecommerce.entity.Cart">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="product_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="checked" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, product_id, quantity, checked, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ecommerce_cart
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ecommerce_cart
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xy.ecommerce.entity.Cart">
    insert into ecommerce_cart (id, user_id, product_id, 
      quantity, checked)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{checked,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xy.ecommerce.entity.Cart">
    insert into ecommerce_cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="checked != null">
        checked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="checked != null">
        #{checked,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xy.ecommerce.entity.Cart">
    update ecommerce_cart
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="checked != null">
        checked = #{checked,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xy.ecommerce.entity.Cart">
    update ecommerce_cart
    set user_id = #{userId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      checked = #{checked,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectCartByUserIdProductId" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"/>
    from ecommerce_cart
    where user_id = #{userId}
    and product_id = #{productId}
  </select>

  <select id="selectCartByUserId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from ecommerce_cart
    where user_id = #{userId}
  </select>

  <select id="selectCartProductCheckedStatusByUserId">
    SELECT  count(1) from ecommerce_cart where checked = 0 and user_id = #{userId}
  </select>

  <delete id="deleteByUserIdProductIds">
    delete from ecommerce_cart
    where user_id=#{userId}
    <if test="productIds != null">
      and product_id in
      <foreach collection="productIds" item="item" index="index" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
  </delete>

  <update id="checkUncheckProduct">
    update ecommerce_cart
    set checked = #{checked}
    where user_id=#{userId}
    <if test="productId != null">
      and product_id=#{productId}
    </if>
  </update>
</mapper>